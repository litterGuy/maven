<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 启动触发器的配置开始 -->  
    <bean name="startQuertz" lazy-init="false" autowire="no"  
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <!--
        	 triggers：通过再添加其他的ref元素可在list中放置多个触发器
        	 注意：此方法没有参数，如果scheduleInfoAction有两个方法test()和test(String argument)，则spring只会去执行无参的test()
         -->
        <property name="triggers">  
            <list>  
                <!-- <ref bean="myJobTrigger" /> -->
                <ref bean="simpleTrigger"/>
            </list>  
        </property>  
    </bean>  
    <!-- 启动触发器的配置结束 -->  
  
    <!-- 调度的配置开始 -->  
    <!--  
        quartz-1.8以前的配置   
    <bean id="myJobTrigger"  
        class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail">  
            <ref bean="myJobDetail" />  
        </property>  
        <property name="cronExpression">  
            <value>0/1 * * * * ?</value>  
        </property>  
    </bean>  
    -->  
     
     <!-- Simple Trigger, run every 5 seconds -->
    <bean id="simpleTrigger"  class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="myJobDetail" />
        <property name="repeatInterval" value="5000" />
        <property name="startDelay" value="1000" />
    </bean>
    
    <!-- quartz-2.x的配置 -->  
    <bean id="myJobTrigger"   class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail"  ref="myJobDetail" />
        <!-- cronExpression：10 0/1 * * *  ?表示延迟10秒后 每1分钟执行一次 -->
        <property name="cronExpression" value="10 0/1 * * *  ?" />  
    </bean>  
    <!-- 调度的配置结束 -->  
  
    <!-- job的配置开始 -->  
    <bean id="myJobDetail"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject" ref="myJob" />  
         <!-- targetMethod: 指定需要定时执行myJob中的work()方法  -->
        <property name="targetMethod" value="work" />
         <!-- 
         	concurrent：对于相同的JobDetail，当指定多个Trigger时, 很可能第一个job完成之前，第二个job就开始了。
         	指定concurrent设为false，多个job不会并发运行，第二个job将不会在第一个job完成之前开始。
          -->
        <property name="concurrent" value="false"/>
    </bean>  
    <!-- job的配置结束 -->  
  
    <!-- 工作的bean -->  
    <bean id="myJob" class="org.cc.quartz.MyJob" />
	
</beans>