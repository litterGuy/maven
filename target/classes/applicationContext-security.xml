<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"   
    xmlns:beans="http://www.springframework.org/schema/beans"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-3.1.xsd"> 
	<!-- 调试模式 -->
	<debug />
	<!-- 指定不拦截的路径，这表示所有路径都不拦截 -->
	<http pattern="/**/*.jsp*" security="none" />
	<!-- 不要过滤图片等静态资源 -->    
    <http pattern="/**/*.jpg" security="none"/>    
    <http pattern="/**/*.png" security="none"/>    
    <http pattern="/**/*.gif" security="none"/>    
    <http pattern="/**/*.css" security="none"/>    
    <http pattern="/**/*.js" security="none"/>
		<!--
			 auto-config = true 则使用from-login. 如果不使用该属性 则默认为http-basic(没有session).    
	        access-denied-page:出错后跳转到的错误页面; 登陆用户无权限时访问的页面
	    -->  
	 <http use-expressions="true" auto-config="false" access-denied-page="/403.jsp" entry-point-ref="authenticationEntryPoint">
	 	<intercept-url pattern="/user/*.do*" access="hasRole('ROLE_USER')"/>
	 	<!-- session-management是针对session的管理. 这里可以不配置. 如有需求可以配置. -->  
        <!-- 
        	id登陆唯一. 后登陆的账号会挤掉第一次登陆的账号  error-if-maximum-exceeded="true" 禁止2次登陆;   
            session-fixation-protection="none" 防止伪造sessionid攻击. 用户登录成功后会销毁用户当前的session.   
            创建新的session,并把用户信息复制到新session中.   
         -->
         <!-- 
        <session-management session-fixation-protection="none" invalid-session-url="/sessionTimeout.jsp">  
            <concurrency-control/>  
        </session-management>
         -->
	   <!-- 检测失效的sessionId,超时时定位到另外一个URL -->
	   
	 	<custom-filter ref="myLoginFilter"  position="FORM_LOGIN_FILTER" />
	 	<!-- 登出配置 -->  
        <logout logout-success-url="/index.jsp"/>  
	 </http>
	 
	 <!-- 认证管理器 -->
	 <authentication-manager alias="authenticationManager">
	 	<!-- UserDetailsService实现 主要用于用户的查询 -->
	 	<authentication-provider user-service-ref="userDetailService">
	 		<password-encoder hash="md5">
              <!-- 用户名做为盐值 -->
              <salt-source user-property="username" />
         	</password-encoder>
	 	</authentication-provider>
	 </authentication-manager>
	 
	<!-- 登陆处理 -->
	 <beans:bean id="myLoginFilter" class="org.cc.spring.security.DefineUsernamePasswordAuthenticationFilter">  
        <beans:property name="authenticationManager" ref="authenticationManager"/>  
        <beans:property name="authenticationFailureHandler" ref="failureHandler"/>  
        <beans:property name="authenticationSuccessHandler" ref="successHandler"/>  
    </beans:bean>
	 
	<!-- 自定义返回的错误显示信息 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">    
	    <beans:property name="basename" value="classpath:messages_zh_CN"/>    
	</beans:bean>
	
	<!-- 成功登录后 -->
    <beans:bean id="successHandler" class="org.cc.spring.security.DefineSavedRequestAwareAuthenticationSuccessHandler">  
        <beans:property name="defaultTargetUrl" value="/login/login.do"/>
    </beans:bean>  
    <!-- 登录失败 -->
    <beans:bean id="failureHandler" class="org.cc.spring.security.DefineSimpleUrlAuthenticationFailureHandler">  
        <beans:property name="defaultFailureUrl" value="/login.jsp?validated=false"/>  
    </beans:bean>
	
	<!-- 登陆入口 -->
	<beans:bean id="authenticationEntryPoint"  
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">  
        <beans:property name="loginFormUrl" value="/login.jsp" />  
    </beans:bean>
	 
</beans:beans>