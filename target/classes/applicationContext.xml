<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/tx 
	           			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	           			http://www.springframework.org/schema/data/mongo
	           			http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">
	<description>Spring配置信息</description>
	
	<context:annotation-config /> 
	 <!-- 配置要扫描的包 -->
	<context:component-scan base-package="org.cc.*"/> 
	
	<!-- 指定数据库配置文件地址. -->
	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
	
	<!--声明一个数据源.c3p0-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="${app.jdbc.driverClassName}"
		p:jdbcUrl="${app.jdbc.url}"
		p:user="${app.jdbc.username}"
		p:password="${app.jdbc.password}"
		p:acquireIncrement="5"
		p:idleConnectionTestPeriod="60"
		p:maxPoolSize="30"
		p:maxStatements="50"
		p:minPoolSize="10" 
		p:maxIdleTime="25000"
	/>
	
	<!-- 配置hibernate -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="packagesToScan">
        	<list>  
            	<value>org.cc</value>
            </list>  
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>  
        </property>
    </bean>
    
	<!--声明一个事务管理器. -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
	
	<!-- 使用annotation注解方式配置事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!--邮件配置  -->
    <context:property-placeholder location="classpath:mail.properties" ignore-unresolvable="true"/>
    <!-- 邮件发送器 163  -->  
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">  
        <property name="host" value="${mail.host}" />  
        <property name="username" value="${mail.username}" />  
        <property name="password" value="${mail.password}" />  
        <property name="defaultEncoding" value="UTF-8"></property>  
        <property name="javaMailProperties">  
            <props>  
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>  
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>  
            </props>  
        </property>  
    </bean>
    
    <!-- moogoDB配置 -->
	<mongo:mongo replica-set="localhost:27017"/>
	
	<!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 --> 
	<mongo:db-factory dbname="maven" mongo-ref="mongo" />
	
	<!-- 模板类 -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
	
</beans>